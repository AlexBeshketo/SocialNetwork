{"version":3,"file":"static/js/338.a8303130.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,KAAO,sBAAsB,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,iBAAmB,kCAAkC,WAAa,4BAA4B,IAAM,qBAAqB,IAAM,qBAAqB,KAAO,wB,gDC0DlZ,MAlDA,YAAkE,IAAhDA,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,cAcxB,OACI,gBAAKC,UAAU,kBAAf,UACI,iBAAKA,UAAWC,EAAAA,KAAhB,WACI,gBAAKC,MAAO,CAACC,UAAW,SAAUC,WAAY,QAA9C,UACI,wCAEJ,yBACKN,EAASO,KAAI,SAACC,GAAD,OACV,gBAAKN,UAAWC,EAAAA,KAAhB,UACI,iBAAKM,GAAIN,EAAAA,WAAT,WACI,gBAAKD,UAAWC,EAAAA,IAAhB,UAAuB,SAACO,EAAA,EAAD,CAAQC,GAAI,CAACC,MAAO,GAAIC,OAAQ,IACxBC,IAAI,6EAEnC,iBAAKZ,UAAWC,EAAAA,IAAhB,WACI,yBAAMK,EAAEO,QACR,gBAAKb,UAAWC,EAAAA,QAAhB,SAA4BK,EAAEQ,WAC9B,iBAAKd,UAAWC,EAAAA,MAAhB,WACI,6BAAM,SAACc,EAAA,EAAD,CAAoBC,MAAO,YAAjC,QACA,6BAAM,SAACC,EAAA,EAAD,IAAN,wBASxB,gBAAKjB,UAAWC,EAAAA,iBAAhB,UACI,SAACiB,EAAA,EAAD,CAAsBC,WAAY,aAAcC,QAASrB,Y,oBCQ7E,GAAesB,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACHzB,SAAUyB,EAAMC,YAAY1B,YAKP,CAACC,cAAAA,EAAAA,IAC1B0B,EAAAA,EAFJ,CAEsBC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Dialogs_main__5NNjU\",\"dialogs\":\"Dialogs_dialogs__WTCAs\",\"usersList\":\"Dialogs_usersList__tZy2H\",\"user\":\"Dialogs_user__8ZZ8t\",\"messages\":\"Dialogs_messages__h3jrF\",\"message\":\"Dialogs_message__v4ap8\",\"img\":\"Dialogs_img__5D4uB\",\"addMessageBorder\":\"Dialogs_addMessageBorder__uZEbw\",\"talkbubble\":\"Dialogs_talkbubble__QX5bv\",\"one\":\"Dialogs_one__x3SAr\",\"two\":\"Dialogs_two__MgvyW\",\"item\":\"Dialogs_item__F7DvV\"};","import React from \"react\";\r\nimport {AllDialogsPropsType} from \"../DialogsContainer\";\r\nimport h from '../Dialogs.module.css'\r\nimport {TextInputMessageForm} from \"../../Profile/Posts/AddPostForm/TextInputMessageForm\";\r\nimport {Avatar} from \"@mui/material\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\n\r\n\r\nfunction Dialogs({messages, addNewMessage}: AllDialogsPropsType) {\r\n\r\n    //// messages\r\n    // let dialogsElements = messages.map((d) =>\r\n    //\r\n    //     <DialogsUsers name={d.user} key={d.id}\r\n    //                   id={d.id}/>)\r\n    //\r\n    // let messagesElements =\r\n    //     messages.map((m: { message: string; id: string }) =>\r\n    //         <Messages key={m.id} message={m.message}/>\r\n    //     )\r\n\r\n\r\n    return (\r\n        <div className='container h-100'>\r\n            <div className={h.main}>\r\n                <div style={{textAlign: 'center', paddingTop: '30px'}}>\r\n                    <h2>Messages</h2>\r\n                </div>\r\n                <div>\r\n                    {messages.map((d) =>\r\n                        <div className={h.item}>\r\n                            <div id={h.talkbubble}>\r\n                                <div className={h.one}><Avatar sx={{width: 56, height: 56}}\r\n                                                               src='https://upload.wikimedia.org/wikipedia/commons/3/33/Mr._Bean_2011.jpg'/>\r\n                                </div>\r\n                                <div className={h.two}>\r\n                                    <div>{d.user}</div>\r\n                                    <div className={h.message}>{d.message}</div>\r\n                                    <div className={h.icons}>\r\n                                        <span><FavoriteBorderIcon color={'primary'}/> </span>\r\n                                        <span><ShareIcon/> </span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className={h.addMessageBorder}>\r\n                    <TextInputMessageForm buttonType={'addMessage'} addPost={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n\r\n// <MessageForm addNewMessage={addNewMessage}/>","import {addNewMessage, MessagesPropsType} from \"../../state/messages-reducer\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../state/redux-store\";\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\nimport {getStatusThunkCreator, getUserProfileThunkCreator, updateStatusThunkCreator} from \"../../state/profile-reducer\";\r\n\r\n// type DialogsContainerType = {\r\n//     store: StorePropsType\r\n// }\r\n// export function DialogsContainer(props: DialogsContainerType) {\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store: StorePropsType) => {\r\n//\r\n//                     const getState = store.getState()\r\n//\r\n//                     const addPost = () => {\r\n//                         store.dispatch(AddNewMessageActionCreator())\r\n//                     }\r\n//\r\n//                     const onChangeCallback = (text: string) => {\r\n//                         store.dispatch(updateNewMessageActionCreator(text))\r\n//                     }\r\n//\r\n//                     return (\r\n//\r\n//                         <Dialogs users={getState.dialogsPage.users} messages={getState.dialogsPage.messages}\r\n//                                  newMessagesBody={getState.dialogsPage.newMessagesBody}\r\n//                                  addPost={addPost} onChangeCallback={onChangeCallback}/>)\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n//\r\n// }\r\n\r\n\r\ntype MSTPType = {\r\n    messages: Array<MessagesPropsType>,\r\n}\r\n\r\ntype MDTPType = {\r\n    addNewMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type AllDialogsPropsType = MSTPType & MDTPType\r\n\r\nlet mapStateToProps = (state: AppStateType): MSTPType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    WithAuthRedirect)(Dialogs)\r\n\r\n\r\n"],"names":["messages","addNewMessage","className","h","style","textAlign","paddingTop","map","d","id","Avatar","sx","width","height","src","user","message","FavoriteBorder","color","Share","TextInputMessageForm","buttonType","addPost","compose","connect","state","dialogsPage","WithAuthRedirect","Dialogs"],"sourceRoot":""}